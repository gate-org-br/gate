/* global customElements, template */

customElements.define('g-card', class extends HTMLElement
{
	constructor()
	{
		super();
		this.attachShadow({mode: "open"});
		this.shadowRoot.appendChild(template.content.cloneNode(true));

		Array.from(this.children)
			.filter(e => e.tagName === "A" || e.tagName === "button")
			.forEach(e => e.setAttribute("slot", "links"));

		this.style.visibility = "visible";

	}

	set icon(value)
	{
		this.setAttribute("icon", value);
	}

	get icon()
	{
		return this.getAtribute("icon");
	}

	set head(value)
	{
		this.setAttribute("head", value);
	}

	get head()
	{
		return this.getAtribute("head");
	}

	set body(value)
	{
		this.setAttribute("body", value);
	}

	get body()
	{
		return this.getAtribute("body");
	}

	set foot(value)
	{
		this.setAttribute("foot", value);
	}

	get foot()
	{
		return this.getAtribute("foot");
	}

	attributeChangedCallback(name, ignore, value)
	{
		switch (name)
		{
			case "head":
			case "foot":
			case "body":
				this.shadowRoot.getElementById(name).innerText = value;
				break;
			case "icon":
				this.shadowRoot.getElementById(name).innerHTML = "&#X" + value + ";";
				break;

		}
	}

	connectedCallback()
	{
		this.classList.add(".g-card");
	}

	static get observedAttributes()
	{
		return ["head", "body", "foot", "icon"];
	}
});