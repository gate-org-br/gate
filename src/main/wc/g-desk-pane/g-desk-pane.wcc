/* global customElements */

import './g-icon.js';

customElements.define('g-desk-pane', class extends HTMLElement
{
	constructor()
	{
		super();
		this.attachShadow({mode: "open"});
		this.shadowRoot.appendChild(template.content.cloneNode(true));

		this.addEventListener("click", function (e)
		{
			let parent = this.parentNode;
			if (parent && parent.tagName === "G-DESK-PANE")
			{
				e.preventDefault();
				e.stopPropagation();

				let backup = parent.buttons;
				this.buttons.forEach(e => parent.appendChild(e));
				backup.forEach(e => e.remove());

				let reset = parent.appendChild(document.createElement("g-desk-pane-reset"));
				reset.addEventListener("click", () =>
				{
					e.preventDefault();
					e.stopPropagation();

					reset.remove();
					parent.buttons.forEach(e => this.appendChild(e));
					backup.forEach(e => parent.appendChild(e));
				});
			}

		}, true);
	}

	get buttons()
	{
		return Array.from(this.children)
			.filter(e => e.tagName === "A"
					|| e.tagName === "BUTTON"
					|| e.tagName === "G-DESK-PANE"
					|| e.classList.contains(".g-command"));
	}

	connectedCallback()
	{
		if (this.parentNode.tagName === "G-DESK-PANE")
			this.setAttribute("child", "");

		this.buttons.flatMap(e => Array.from(e.childNodes))
			.filter(e => e.nodeType === Node.TEXT_NODE)
			.forEach(e => e.parentNode.appendChild(e));

		Array.from(this.querySelectorAll("i, g-icon"))
			.forEach(e => e.style.fontSize = "48px");
		Array.from(this.querySelectorAll("img")).forEach(e =>
		{
			e.style.width = "48px";
			e.style.height = "48px";
		});
	}
});

customElements.define('g-desk-pane-reset', class extends HTMLElement
{
	constructor()
	{
		super();
	}
});