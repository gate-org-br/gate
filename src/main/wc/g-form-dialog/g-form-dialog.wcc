/* global customElements, template, fetch, Promise */

import './g-form.js';
import './g-icon.js';
import GWindow from './g-window.js';
import ResponseHandler from './response-handler.js';

export default class GFormDialog extends GWindow
{
	constructor()
	{
		super();
		this.shadowRoot.innerHTML = this.shadowRoot.innerHTML + template.innerHTML;
		let form = this.shadowRoot.querySelector("g-form");
		this.shadowRoot.getElementById("close").addEventListener("click", () => this.dispatchEvent(new CustomEvent("cancel")) | this.hide());
		this.shadowRoot.getElementById("cancel").addEventListener("click", () => this.dispatchEvent(new CustomEvent("cancel")) | this.hide());
		this.shadowRoot.getElementById("commit").addEventListener("click", () =>
		{
			if (form.checkValidity())
			{
				this.dispatchEvent(new CustomEvent("commit", {detail: form.value}));
				this.hide();
			}
		});
	}

	set caption(caption)
	{
		this.shadowRoot.getElementById("caption").innerHTML = caption;
	}

	get caption()
	{
		return this.shadowRoot.getElementById("caption").innerHTML;
	}

	set value(value)
	{
		this.shadowRoot.querySelector("g-form").value = value;
	}

	get value()
	{
		this.shadowRoot.querySelector("g-form").value;
	}

	static edit(value, caption)
	{
		let dialog = window.top.document.createElement("g-form-dialog");
		dialog.value = value;
		if (caption)
			dialog.caption = caption;
		dialog.show();
		let promise = new Promise(resolve =>
		{
			dialog.addEventListener("commit", e => resolve(e.detail));
			dialog.addEventListener("cancel", () => resolve());
		});
		return promise;
	}

	static update(url, caption)
	{
		return fetch(url)
			.then(response => ResponseHandler.json(response))
			.then(form => GFormDialog.edit(form, caption))
			.then(result =>
			{
				if (!result)
					return Promise.resolve({"ok": true});

				return fetch(url,
					{method: "post",
						headers: {'Content-Type': 'application/json'},
						body: JSON.stringify(result)});
			})
			.then(response => ResponseHandler.json(response));
	}
}

customElements.define('g-form-dialog', GFormDialog);