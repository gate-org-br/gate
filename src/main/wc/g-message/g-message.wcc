/* global customElements, template */

import './g-window-header.mjs';
import GModal from './g-modal.mjs';

export default class Message extends GModal
{
	constructor()
	{
		super();
		this.attachShadow({mode: "open"});
		this.shadowRoot.appendChild(template.content.cloneNode(true));
		this.addEventListener("click", event => event.target === this && this.hide());
		this.shadowRoot.getElementById("close").addEventListener("click", () => this.hide());
	}

	set type(type)
	{
		this.setAttribute("type", type);
	}

	get type()
	{
		return this.getAttribute("type");
	}

	set text(text)
	{
		this.setAttribute("text", text);
	}

	get text()
	{
		return this.getAttribute("text");
	}

	get title()
	{
		return this.getAttribute("title");
	}

	set title(title)
	{
		return this.setAttribute("title", title);
	}

	attributeChangedCallback(name)
	{
		switch (name)
		{
			case 'title':
				this.shadowRoot.getElementById("title").innerText = this.title || "";
				break;
			case 'text':
				this.shadowRoot.getElementById("text").innerText = this.text || "";
				break;
		}
	}

	static get observedAttributes() {
		return ['type', 'text', "title"];
	}

	static success(text, timeout)
	{
		var message = window.top.document.createElement("g-message");
		message.type = "SUCCESS";
		message.text = text;
		message.title = "Sucesso";
		message.timeout = timeout;
		message.show();

		if (timeout)
			window.top.setTimeout(() => message.hide(), timeout);
	}

	static warning(text, timeout)
	{
		var message = window.top.document.createElement("g-message");
		message.type = "WARNING";
		message.text = text;
		message.title = "Alerta";
		message.timeout = timeout;
		message.show();

		if (timeout)
			window.top.setTimeout(() => message.hide(), timeout);
	}

	static error(text, timeout)
	{
		var message = window.top.document.createElement("g-message");
		message.type = "ERROR";
		message.text = text;
		message.title = "Erro";
		message.timeout = timeout;
		message.show();

		if (timeout)
			window.top.setTimeout(() => message.hide(), timeout);
	}

	static  info(text, timeout)
	{
		var message = window.top.document.createElement("g-message");
		message.type = "INFO";
		message.text = text;
		message.title = "Informação";
		message.timeout = timeout;
		message.show();

		if (timeout)
			window.top.setTimeout(() => message.hide(), timeout);
	}

	static  show(status, timeout)
	{
		switch (status.type)
		{
			case "SUCCESS":
				Message.success(status.message, timeout);
				break;
			case "WARNING":
				Message.warning(status.message, timeout);
				break;
			case "ERROR":
				Message.error(status.message, timeout);
				break;
			case "INFO":
				Message.info(status.message, timeout);
				break;
		}
	}
}

customElements.define('g-message', Message);