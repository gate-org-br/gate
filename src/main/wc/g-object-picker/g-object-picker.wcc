/* global customElements, template */

import './g-window-header.mjs';
import './g-window-section.mjs';
import './g-object-selector.mjs';
import GModal from './g-modal.mjs';

export default class GObjectPicker extends GModal
{
	constructor()
	{
		super();
		this._private = {};
		this.attachShadow({mode: "open"});
		this.shadowRoot.innerHTML = template.innerHTML;
		this.shadowRoot.getElementById("close").addEventListener("click",
			() => this.dispatchEvent(new CustomEvent("canceled")) | this.hide());

		let selector = this.shadowRoot.querySelector("g-object-selector");
		selector.addEventListener("selected", e =>
			this.dispatchEvent(new CustomEvent("picked", {detail: e.detail})) | this.hide());

		let input = this.shadowRoot.querySelector("input");
		input.addEventListener("input", () =>
		{
			let text = input.value.toLowerCase();
			this.shadowRoot.querySelector("g-object-selector").value = text
				? this.options.filter(e =>
				{
					let label = e.label.toLowerCase();

					if (label.includes(text))
						return true;

					if (e.properties)
						if (Object.values(e.properties).some(property => text === property.toLowerCase()))
							return true;

					return false;
				}) : this.options;
		});
	}

	set caption(caption)
	{
		this.shadowRoot.getElementById("caption").innerHTML = caption;
	}

	get caption()
	{
		return this.shadowRoot.getElementById("caption").innerHTML;
	}

	set options(options)
	{
		this._private.options = options;
		this.shadowRoot.querySelector("input").value = "";
		this.shadowRoot.querySelector("g-object-selector").options = options;
	}

	get options()
	{
		return this._private.options;
	}

	static pick(options, caption)
	{
		let picker = window.top.document.createElement("g-object-picker");
		picker.options = options;
		if (caption)
			picker.caption = caption;
		picker.show();

		return new Promise(resolve =>
		{
			picker.addEventListener("canceled", () => resolve());
			picker.addEventListener("picked", e => resolve(e.detail));
		});
	}
};

customElements.define('g-object-picker', GObjectPicker);