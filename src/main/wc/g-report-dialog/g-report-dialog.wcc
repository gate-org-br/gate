/* global customElements */

import './g-icon.js';
import './g-download-status.js';
import './g-report-selector.js';
import GWindow from './g-window.js';
import Command from './command.js';


customElements.define('g-report-dialog', class extends GWindow
{
	constructor()
	{
		super();
		this.shadowRoot.appendChild(template.content.cloneNode(true));
		this.shadowRoot.getElementById("cancel").addEventListener("click", () => this.hide());
		this.shadowRoot.querySelector("g-download-status").addEventListener("done", () => this.hide());
	}

	show()
	{
		this.shadowRoot.querySelector("g-report-selector").style.display = "";
		this.shadowRoot.querySelector("g-download-status").style.display = "none";
		super.show();
	}

	get(url)
	{
		let status = this.shadowRoot.querySelector("g-download-status");
		let selector = this.shadowRoot.querySelector("g-report-selector");

		selector.addEventListener("selected", event =>
		{
			status.style.display = "";
			selector.style.display = "none";
			status.download("get", new Command(url).parameter("type", event.detail), null);
		});
		this.show();
	}

	post(url, data)
	{
		let status = this.shadowRoot.querySelector("g-download-status");
		let selector = this.shadowRoot.querySelector("g-report-selector");

		selector.addEventListener("selected", event =>
		{
			status.style.display = "";
			selector.style.display = "none";
			status.download("post", new Command(url).parameter("type", event.detail), data);
		});
		this.show();
	}
});