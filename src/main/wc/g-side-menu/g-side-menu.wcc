/* global customElements */

import GBlock from './g-block.js';
import loading from './loading.js';
import EventHandler from './event-handler.js';
import RequestBuilder from './request-builder.js';
import GMessageDialog from './g-message-dialog.js';
import ResponseHandler from './response-handler.js';


customElements.define('g-side-menu', class extends HTMLElement
{
	constructor()
	{
		super();
		this.attachShadow({mode: 'open'});
		this.shadowRoot.appendChild(template.content.cloneNode(true));

		this.shadowRoot.querySelector("header")
			.addEventListener("click", event =>
			{
				if (!this.hasAttribute("open"))
					this.setAttribute("open", "");
				else
					this.removeAttribute("open");
			});

		this.shadowRoot.querySelector("section")
			.addEventListener("click", event => this.removeAttribute("open"));
	}

	connectedCallback()
	{
		Array.from(this.children)
			.flatMap(e => Array.from(e.childNodes))
			.filter(e => e.nodeType === Node.TEXT_NODE)
			.forEach(e => e.parentNode.appendChild(e));

		Array.from(this.children)
			.filter(e => e.tagName !== "HR")
			.filter(e => !e.querySelector('g-icon'))
			.forEach(e => e.setAttribute("_iconless", ""));
	}
});