package gate.modules;

import gate.annotation.Icon;
import gate.annotation.Name;
import gate.base.Screen;
import gate.error.AppException;
import gate.error.NotFoundException;
import java.util.ArrayList;
import java.util.List;
import javax.inject.Inject;
import gate.control.UserControl;
import gate.entity.User;

public class UserScreen extends Screen
{
	private User form;
	private List<User> page;

	@Inject
	private UserControl control;

	public String call()
	{
		if (isPOST() && getMessages().isEmpty())
			page = control.search(getForm());
		return "/WEB-INF/views/gate/modules/User/View.jsp";
	}

	public String callSearch()
	{
		if (isPOST() && getMessages().isEmpty())
			page = control.search(getForm());
		return "/WEB-INF/views/gate/modules/User/ViewSearch.jsp";
	}

	@Icon("select")
	@Name("Detalhes")
	public String callSelect()
	{
		try
		{
			form = control.select(getForm().getId());
			return "/WEB-INF/views/gate/modules/User/ViewSelect.jsp";
		} catch (NotFoundException ex)
		{
			setMessages(ex.getMessages());
			return call();
		}
	}

	@Name("Novo")
	@Icon("insert")
	public String callInsert()
	{
		if (isPOST() && getMessages().isEmpty())
		{
			try
			{
				control.insert(getForm());
				return callSelect();
			} catch (AppException ex)
			{
				setMessages(ex.getMessages());
			}
		}

		return "/WEB-INF/views/gate/modules/User/ViewInsert.jsp";
	}

	@Icon("update")
	@Name("Alterar")
	public String callUpdate()
	{
		if (isGET())
		{
			try
			{
				form = control.select(getForm().getId());
			} catch (NotFoundException ex)
			{
				setMessages(ex.getMessages());
				return call();
			}
		} else if (getMessages().isEmpty())
		{
			try
			{
				control.update(getForm());
				return callSelect();
			} catch (AppException ex)
			{
				setMessages(ex.getMessages());
			}
		}
		return "/WEB-INF/views/gate/modules/User/ViewUpdate.jsp";
	}

	@Icon("delete")
	@Name("Remover")
	public String callDelete()
	{
		try
		{
			control.delete(getForm());
			getMessages().add("O registro foi removido com sucesso.");
		} catch (AppException ex)
		{
			setMessages(ex.getMessages());
		}
		return "/WEB-INF/views/gate/modules/User/ViewResult.jsp";
	}

	public User getForm()
	{
		if (form == null)
			form = new User();
		return form;
	}

	public List<User> getPage()
	{
		if (page == null)
			page = new ArrayList<>();
		return page;
	}
}